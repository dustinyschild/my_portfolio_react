// TODO: import {{functionReturningPromise}}
import * as types from "../constants/actionTypes";

const fetch{{pascalCase name}}Started = () => ({
  type: types.FETCH_{{constantCase name}}_STARTED
});

const fetch{{pascalCase name}}Succeeded = data => ({
  type: types.FETCH_{{constantCase name}}_SUCCEEDED,
  payload: data
});

const fetch{{pascalCase name}}Failed = error => ({
  type: types.FETCH_{{constantCase name}}_FAILED,
  payload: error,
  error: true
});

// Async action creator using thunk middleware
export function fetch{{pascalCase name}}() {
  return dispatch => {
    dispatch(fetch{{pascalCase name}}Started());

    return {{functionReturningPromise}}.then(
      response => {
        dispatch(fetch{{pascalCase name}}Succeeded(response.data));
      },
      error => {
        // Do not use catch - see https://github.com/facebook/react/issues/7617#issuecomment-247710003
        dispatch(fetch{{pascalCase name}}Failed(error));
      }
    );
  };
}
